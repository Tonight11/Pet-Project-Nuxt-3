datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Course {
  id            Int             @id @default(autoincrement())
  title         String
  chapters      Chapter[]
  CoursePayment CoursePayment[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Chapter {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String
  number    Int
  lessons   Lesson[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
}

model Lesson {
  id             Int              @id @default(autoincrement())
  title          String
  slug           String
  number         Int
  downloadUrl    String
  sourceUrl      String?
  videoId        Int
  text           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Chapter        Chapter          @relation(fields: [chapterId], references: [id])
  chapterId      Int
  ProgressLesson ProgressLesson[]
}

model ProgressLesson {
  id        Int      @id @default(autoincrement())
  completed Boolean  @default(false)
  userEmail String
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lessonId  Int

  @@unique([lessonId, userEmail])
}

model CoursePayment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  verifed   Boolean  @default(false)
  email     String
  paymentId Int      @unique
}
